{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport api from '../../../../service/api';\n\nfunction Forms(props) {\n  const [forms, setForms] = useState({});\n  const [load, setload] = useState(false);\n  useEffect(() => {\n    if (!load) {\n      const url = props.url.substr(25, props.url.length);\n      api.get(url).then(res => {\n        const response = res.data.forms_names;\n        console.log(\"forms filho \", response); // if(response !== {}){\n        //     setForms(response);\n        //     setload(true);\n        // }\n      });\n    }\n  }, [load, props.url]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default Forms;","map":{"version":3,"sources":["/Users/rafael/Desktop/projetoPokemon/src/components/pokemons/pokemon/forms/index.js"],"names":["React","useState","useEffect","api","Forms","props","forms","setForms","load","setload","url","substr","length","get","then","res","response","data","forms_names","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACM,IAAJ,EAAS;AACP,YAAME,GAAG,GAAGL,KAAK,CAACK,GAAN,CAAUC,MAAV,CAAiB,EAAjB,EAAoBN,KAAK,CAACK,GAAN,CAAUE,MAA9B,CAAZ;AACET,MAAAA,GAAG,CAACU,GAAJ,CAAQH,GAAR,EAAaI,IAAb,CAAkBC,GAAG,IAAI;AACrB,cAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASC,WAA1B;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,QAA5B,EAFiB,CAKrB;AACA;AACA;AACA;AACH,OATD;AAWH;AACJ,GAfQ,EAeP,CAACR,IAAD,EAAOH,KAAK,CAACK,GAAb,CAfO,CAAT;AAiBF,sBACE,yCADF;AAmBD;;AAED,eAAeN,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport api from '../../../../service/api';\n\nfunction Forms(props) {\n    const [forms,setForms] = useState({});\n    const [load, setload] = useState(false);\n\n    useEffect(() => {\n        if(!load){\n          const url = props.url.substr(25,props.url.length);\n            api.get(url).then(res => {\n                const response = res.data.forms_names;\n                    console.log(\"forms filho \", response);\n\n    \n                // if(response !== {}){\n                //     setForms(response);\n                //     setload(true);\n                // }\n            });\n\n        }\n    },[load, props.url])\n\n  return (\n    <>\n       {/* {load ? (\n         <h5 className=\"forms-item\">\n            {forms.length > 0 ? (  \n                <>               \n                    { forms.map(element => \n                        <span> {element} </span> \n                    )} \n                </>        \n                ):(\n                    <span> Form names est√° vazio.</span>\n                )} \n         </h5>\n       ):(\n           <p>Carregando...</p>\n       )} */}\n    </>\n  );\n}\n\nexport default Forms;"]},"metadata":{},"sourceType":"module"}